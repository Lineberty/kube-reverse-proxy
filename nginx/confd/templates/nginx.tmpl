{{range $service := lsdir "/proxy/services"}}
	upstream {{ base $service }} {
		{{$endpoints := printf "/proxy/services/%s/endpoints/*" $service}} {{ range gets $endpoints}}
			server {{ printf "%s:%s" .Key .Value}};
		{{end}} 
	}
{{end}}


{{range $domain := ls "/proxy/domains" }}
	{{ $httpServices := ls (printf "/proxy/domains/%s/http/services" $domain) }}
	{{ if gt ( len ( $httpServices ) ) 0 }}
		server {
			listen 80;
    		server_name  {{ $domain }};

			{{range $service := $httpServices}}
				location {{ getv (printf "/proxy/services/%s/path" $service) }}  {
        			proxy_pass        http://{{ $service }};
        			proxy_redirect    off;
        			proxy_set_header  Host              $host;
        			proxy_set_header  X-Real-IP         $remote_addr;
        			proxy_set_header  X-Forwarded-Proto $scheme;
        			proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
   				}
			{{end}}
	}
	{{ end }}
	
	{{ $httpsServices := ls (printf "/proxy/domains/%s/https/services" $domain) }}
	{{ if gt ( len ( $httpsServices ) ) 0 }}
		server {
			listen 443;
    		server_name  {{ $domain }};
    		
    		ssl_certificate           /etc/secret/{{ $domain }}.crt;
    		ssl_certificate_key       /etc/nginx/{{ $domain }}.key;

    		ssl on;
    		ssl_session_cache  builtin:1000  shared:SSL:10m;
    		ssl_protocols  TLSv1 TLSv1.1 TLSv1.2;
    		ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    		ssl_prefer_server_ciphers on;

			{{range $service := $httpsServices}}
				location {{ getv (printf "/proxy/services/%s/path" $service) }}  {
        			proxy_pass        http://{{ $service }};
        			proxy_redirect    off;
        			proxy_set_header  Host              $host;
        			proxy_set_header  X-Real-IP         $remote_addr;
        			proxy_set_header  X-Forwarded-Proto $scheme;
        			proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
   				}
			{{end}}
	}
	{{ end }}
{{end}}